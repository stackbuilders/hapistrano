# The present workflow was made based on the following references:
# - https://github.com/actions/cache/blob/main/examples.md#haskell---cabal
# - https://github.com/haskell/time/blob/master/.github/workflows/ci.yml
# - https://github.com/stackbuilders/stache/blob/master/.github/workflows/ci.yaml
# - https://markkarpov.com/post/github-actions-for-haskell-ci.html
# - https://github.com/tfausak/strive/blob/main/.github/workflows/ci.yaml
---
name: CI

on: push

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        ghc:
          - "9.0"
          - "8.10"

    steps:
      - uses: actions/checkout@v3
      - if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install zsh
      - if: ${{ runner.os == 'macOS' }}
        run: |
          brew update
          brew install zsh
      - uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: "3.6"
        id: setup-haskell
      - run: cabal configure --enable-tests
      - run: cabal freeze
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-
      - run: cabal build
      - run: cabal test
      - run: ./script/haddock

      - name: Create folder for artifacts
      - id: artifact
        run: |
          mkdir artifact
          mkdir artifact/${{ matrix.os }}
          mkdir artifact/${{ matrix.os }}/${{ matrix.ghc }}
          echo ::set-output name=directory::'artifact/${{ matrix.os }}/${{ matrix.ghc }}'

      - name: Generate package ready for Hackage distribution
      - run: cabal sdist --output-dir ${{ steps.artifact.outputs.directory }}

      - name: Upload the artifact to GitHub
      - uses: actions/upload-artifact@v2
        with:
          path: artifact
          name: hapistrano-${{ github.sha }}

  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact from GitHub
      - uses: actions/download-artifact@v2
        with:
          name: hapistrano-${{ github.sha }}
          path: artifact

      - name: Upload package to Hackage
      - run: |
        cabal upload --publish \
          --username '${{ secrets.HACKAGE_USERNAME }}' \
          --password '${{ secrets.HACKAGE_PASSWORD }}' \
          artifact/ubuntu-latest/9.0/hapistrano-${{ github.event.release.tag_name }}.tar.gz
